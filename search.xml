<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Visionfive2科学上网</title>
      <link href="/2023/05/03/visionfive2-ke-xue-shang-wang/"/>
      <url>/2023/05/03/visionfive2-ke-xue-shang-wang/</url>
      
        <content type="html"><![CDATA[<h1 id="VisionFive2-科学上网"><a href="#VisionFive2-科学上网" class="headerlink" title="VisionFive2 科学上网"></a>VisionFive2 科学上网</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于我使用的是实验室公用的服务器，安装clash过于频繁了，所以单独用一篇写一下。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="1-版本选择"><a href="#1-版本选择" class="headerlink" title="1.版本选择"></a>1.版本选择</h3><p>由于比较新的版本没有riscv64版本的，所以暂时选择了 v1.13.0 版本：</p><pre class=" language-shell"><code class="language-shell">wget https://github.com/Dreamacro/clash/releases/download/v1.13.0/clash-linux-riscv64-v1.13.0.gz</code></pre><h3 id="2-下载完成后直接解压缩到-usr-local-bin目录下"><a href="#2-下载完成后直接解压缩到-usr-local-bin目录下" class="headerlink" title="2.下载完成后直接解压缩到/usr/local/bin目录下"></a>2.下载完成后直接解压缩到<code>/usr/local/bin</code>目录下</h3><pre class=" language-shell"><code class="language-shell">gzip -dc clash-linux-riscv64-v1.13.0.gz > /usr/local/bin/clashchmod +x /usr/local/bin/clash# 能省一点就省一点rm -f clash-linux-riscv64-v1.13.0.gz</code></pre><h3 id="3-下载-MMDB-文件"><a href="#3-下载-MMDB-文件" class="headerlink" title="3.下载 MMDB 文件"></a>3.下载 MMDB 文件</h3><p>这里要说明一下，由于我的clash是要和别的同学分开的，所以就不开启service了。</p><pre class=" language-shell"><code class="language-shell"># 在你想在的文件夹下mkdir clashcd clashwget -O Country.mmdb https://github.com/Dreamacro/maxmind-geoip/releases/download/20220812/Country.mmdb</code></pre><h3 id="4-环境变量"><a href="#4-环境变量" class="headerlink" title="4.环境变量"></a>4.环境变量</h3><pre class=" language-shell"><code class="language-shell">export http_proxy="127.0.0.1:7890"export https_proxy="127.0.0.1:7890"export no_proxy="localhost, 127.0.0.1"</code></pre><p>使用的时候source一下。</p><h3 id="5-导入订阅链接"><a href="#5-导入订阅链接" class="headerlink" title="5.导入订阅链接"></a>5.导入订阅链接</h3><pre class=" language-shell"><code class="language-shell">wget -O <your path>/config.yaml [你的订阅链接]# 或者从其他地方复制过来也是可以的捏</code></pre><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>最后就是启动了，注意我这里是在我的config的文件夹下。</p><pre class=" language-shell"><code class="language-shell">source <proxy的位置>clash -d .</code></pre><p><img src="/2023/05/03/visionfive2-ke-xue-shang-wang/%E6%88%90%E5%8A%9F%E5%90%AF%E5%8A%A8.png" alt="成功启动"></p>]]></content>
      
      
      <categories>
          
          <category> VisionFive2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VisionFive2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Visionfive2 GO环境</title>
      <link href="/2023/05/03/visionfive2go-huan-jing/"/>
      <url>/2023/05/03/visionfive2go-huan-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="Visionfive2-GO环境"><a href="#Visionfive2-GO环境" class="headerlink" title="Visionfive2 GO环境"></a>Visionfive2 GO环境</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇博客会主要介绍怎么从源码中构建最新版本的GoLang。</p><h2 id="引导主机上"><a href="#引导主机上" class="headerlink" title="引导主机上"></a>引导主机上</h2><p>1.在引导主机上</p><pre class=" language-shell"><code class="language-shell">git clone https://github.com/golang/go</code></pre><p>2.进入src文件中，交叉编译</p><pre class=" language-shell"><code class="language-shell">cd go/srcGOOS=linux GOARCH=riscv64 ./bootstrap.bash</code></pre><p>3.将编译完的包打包到开发板上</p><pre class=" language-shell"><code class="language-shell">scp -P 22222 ../../go-linux-riscv64-bootstrap.tbz root@localhost:</code></pre><h2 id="开发板上"><a href="#开发板上" class="headerlink" title="开发板上"></a>开发板上</h2><p>1.获得源码</p><pre class=" language-shell"><code class="language-shell"># 二选一即可tar vxf go-linux-riscv64-bootstrap.tbz      git clone https://github.com/golang/go</code></pre><p>2.切换到最新版本</p><p>也可以切换到需要的版本</p><pre class=" language-shell"><code class="language-shell">git checkout $(git --git-dir ./go/.git describe --tags)</code></pre><p>3.编译源码</p><pre class=" language-shell"><code class="language-shell">cd go/srcexport GOROOT_BOOTSTRAP=$HOME/go-linux-riscv64-bootstrap./make.bash</code></pre><p>4.最后可以打包成压缩文件（可选）</p><pre class=" language-shell"><code class="language-shell">cd ..tar -cvf $(git --git-dir ./go/.git describe --tags).$(uname -s |tr [:upper:] [:lower:])-$(uname -m).tar --exclude=pkg/obj --exclude=.git go</code></pre><h2 id="修改环境变量"><a href="#修改环境变量" class="headerlink" title="修改环境变量"></a>修改环境变量</h2><h3 id="更改GOPATH和GOROOT"><a href="#更改GOPATH和GOROOT" class="headerlink" title="更改GOPATH和GOROOT"></a>更改GOPATH和GOROOT</h3><pre class=" language-shell"><code class="language-shell">vim /etc/profile# 自己设置路径export GOROOT=/usr/local/goexport GOPATH=/root/golang/work   export PATH=$PATH:$GOROOT/bin:$GOPATH/bin</code></pre><p>最后要记得启动更新</p><pre class=" language-shell"><code class="language-shell">source /etc/profile</code></pre>]]></content>
      
      
      <categories>
          
          <category> VisionFive2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VisionFive2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Visionfive2开发板启动</title>
      <link href="/2023/05/03/visionfive2-kai-fa-ban-qi-dong/"/>
      <url>/2023/05/03/visionfive2-kai-fa-ban-qi-dong/</url>
      
        <content type="html"><![CDATA[<h1 id="VisionFive2-开发板启动"><a href="#VisionFive2-开发板启动" class="headerlink" title="VisionFive2 开发板启动"></a>VisionFive2 开发板启动</h1><h2 id="内核更新"><a href="#内核更新" class="headerlink" title="内核更新"></a>内核更新</h2><h3 id="1-挂载sd卡："><a href="#1-挂载sd卡：" class="headerlink" title="1.挂载sd卡："></a>1.挂载sd卡：</h3><p>​1.在工作的ubuntu系统下列出设备:</p><pre class=" language-shell"><code class="language-shell">fdisk -l</code></pre><p><img src="/2023/05/03/visionfive2-kai-fa-ban-qi-dong/%E8%AE%BE%E5%A4%87%E6%83%85%E5%86%B51.png" alt="设备情况1"></p><p>​2.将文件系统进行挂载，需要挂载两部分，如下：</p><pre class=" language-shell"><code class="language-shell">mount /dev/sdb2 /media/mao/root/boot/mount /dev/sdb3 /media/mao/root/usr/</code></pre><p>​3.将制作好的内核文件和启动文件分别拷贝至对应文件夹下：</p><pre class=" language-shell"><code class="language-shell"># 对于启动文件cp /home/mao/tmp/vmlinuz-5.15.0-starfive /media/mao/root/boot/boot/ && synccp /home/mao/tmp/config-5.15.0-starfive /media/mao/root/boot/boot/ && synccp /home/mao/tmp/System.map-5.15.0-starfive /media/mao/root/boot/boot/ && sync# 对于内核镜像cp /home/mao/tmp/linux-image-5.15.0-starfive_5.15.0-starfive-1_riscv64.deb /media/mao/root/usr/ && synccp /home/mao/tmp/linux-libc-dev_5.15.0-starfive-1_riscv64.deb /media/mao/root/usr/ && synccp /home/mao/tmp/linux-headers-5.15.0-starfive_5.15.0-starfive-1_riscv64.deb /media/mao/root/usr/ && sync</code></pre><h3 id="2-使用sd卡启动开发板："><a href="#2-使用sd卡启动开发板：" class="headerlink" title="2.使用sd卡启动开发板："></a>2.使用sd卡启动开发板：</h3><p>在完成上述操作后启动开发板会进入紧急模式，输入root下的密码即可登录</p><p>​1.登录后在 <code>/</code> 目录下能够看到拷贝完成的三个内核文件，然后执行以下命令，<strong>注意要按照顺序执行</strong>：</p><pre class=" language-shell"><code class="language-shell">dpkg -i linux-headers-5.15.0-starfive_5.15.0-starfive-1_riscv64.debdpkg -i linux-libc-dev_5.15.0-starfive-1_riscv64.debdpkg -i linux-image-5.15.0-starfive_5.15.0-starfive-1_riscv64.deb</code></pre><p>​2.重启系统后应该是能够进入正常的登录界面就可以了。</p><h2 id="磁盘无损扩展"><a href="#磁盘无损扩展" class="headerlink" title="磁盘无损扩展"></a>磁盘无损扩展</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这一步是因为我的SD卡是32G的，但是下载的镜像中只有16G，并且我认为扩展现有的分区在使用的时候体验更好。</p><h3 id="使用growpart进行扩展"><a href="#使用growpart进行扩展" class="headerlink" title="使用growpart进行扩展"></a>使用<code>growpart</code>进行扩展</h3><p>1.安装<code>growpart</code></p><pre class=" language-shell"><code class="language-shell">apt install cloud-utils</code></pre><p>2.查看磁盘分区</p><pre class=" language-shell"><code class="language-shell">fdisk -l</code></pre><p><img src="/2023/05/03/visionfive2-kai-fa-ban-qi-dong/%E8%AE%BE%E5%A4%87%E6%83%85%E5%86%B52.png" alt="设备情况2"></p><p>可以看到有这样三个分区，我要扩展的就是第三个分区</p><p>3.扩展分区</p><pre class=" language-shell"><code class="language-shell"># 扩容mmcblk1p3growpart /dev/mmcblk1 3# output# CHANGED: partition=3 start=239616 old: size=32526303 end=32765918 new: size=60827615 end=61067230# 加载文件系统并检查 4K 对齐resize2fs /dev/mmcblk1p3</code></pre><p>4.重启系统</p><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
      
      
      <categories>
          
          <category> VisionFive2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VisionFive2 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
